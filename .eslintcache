[{"/home/ayushman/Dev/Tic-Tac-Toe/app/src/index.js":"1"},{"size":3418,"mtime":1606709521279,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1f0p5j6","/home/ayushman/Dev/Tic-Tac-Toe/app/src/index.js",["7","8"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Block(props){\n    return(\n        <button \n            className = \"block\" \n            onClick = {props.onClick}\n        >\n            {props.value}\n        </button>        \n    );\n}\n\nfunction Winner(blocks){\n    const winningCombinations = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],        \n    ];\n    for(let i = 0 ; i < winningCombinations.length; ++i){\n        const [x,y,z] =winningCombinations[i];\n        if(blocks[x] && blocks[x] === blocks[y] && blocks[x] === blocks[z]){\n            return blocks[x];\n        }\n    }\n    return null;\n}\n\n\nclass Board extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            blocks : Array(9).fill(null),\n            isX :true,\n            clicks :0,\n        };\n    }\n    checkWinner(){\n        const winner = Winner(this.state.blocks);\n        if(winner){\n            alert('!!!! '+winner+' wins !!!');\n            return;\n        }\n        if(this.state.clicks == 9){\n            alert('!!No Winner Found -- DRAW !!');\n        }\n    }\n    handleClick(id){\n        const x = this.state.blocks.slice();\n        if(Winner(x) || x[id]){    \n            return;\n        }\n        if(this.state.isX)\n            x[id] = 'X';\n        else    \n            x[id] = 'O';\n        this.setState(\n            {\n                blocks : x,\n                isX : !this.state.isX,\n                clicks : this.state.clicks+1,\n            },\n            this.checkWinner\n        );\n    }\n    renderBlock(id){\n        return(\n            <Block \n                value = {this.state.blocks[id]}\n                onClick = {() => this.handleClick(id)}\n            />\n        );\n    }\n\n\n    render(){\n        const winner = Winner(this.state.blocks);\n        let status = 'Next Player: ' + (this.state.isX?'X':'O');\n\n        if(winner){\n            status = '!!! Winner '+(winner)+' !!!';\n        }\n        else if(this.state.clicks == 9){\n            status = '!!!! DRAW !!!!';\n        }\n\n        return(\n            <div className=\"boardBody\">\n                <div className = \"declarator\"> \n                    {status}\n                </div>\n                <div className = \"row\">\n                    {this.renderBlock(0)}\n                    {this.renderBlock(1)}\n                    {this.renderBlock(2)}\n                </div>\n                <div className = \"row\">\n                    {this.renderBlock(3)}\n                    {this.renderBlock(4)}\n                    {this.renderBlock(5)}\n                </div>  \n                <div className = \"row\">\n                    {this.renderBlock(6)}\n                    {this.renderBlock(7)}\n                    {this.renderBlock(8)}\n                </div>                                \n            </div>\n            \n        );\n    }\n}\n\nclass Game extends React.Component{\n    render(){\n        return(\n            <div className=\"game\" align='center'>\n                <div className = \"board\">\n                    <Board/>\n                </div>\n                <div className = \"moves\">\n                    <div>{}</div>\n                    <ol>{}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(<Game />,document.getElementById('root'));\n",{"ruleId":"9","severity":1,"message":"10","line":53,"column":30,"nodeType":"11","messageId":"12","endLine":53,"endColumn":32},{"ruleId":"9","severity":1,"message":"10","line":92,"column":35,"nodeType":"11","messageId":"12","endLine":92,"endColumn":37},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]